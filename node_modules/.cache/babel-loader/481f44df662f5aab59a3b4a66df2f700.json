{"ast":null,"code":"import _defineProperty from \"/Users/ayanoomori/udemy-react-redux-crud-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nimport { CREATE_EVENT, READ_EVENTS, DELETE_EVENT, UPDATE_EVENT, READ_EVENT } from '../actions'; // const initialState = { value: 0 }\n\nexport default ((events = {}, action) => {\n  switch (action.type) {\n    case CREATE_EVENT:\n    case READ_EVENT:\n    case UPDATE_EVENT:\n      const data = action.response.data;\n      return _objectSpread({}, events, {\n        [data.id]: data\n      });\n\n    case READ_EVENTS:\n      // console.log(action.response.data)\n      // console.log(_.mapKeys(action.response.data, 'id'))\n      return _.mapKeys(action.response.data, 'id');\n    // case DECREMENT:\n    //   return { value: state.value - 1 }\n\n    case DELETE_EVENT:\n      delete events[action.id];\n      return _objectSpread({}, events);\n\n    default:\n      return events;\n  }\n});","map":{"version":3,"sources":["/Users/ayanoomori/udemy-react-redux-crud-application/src/reducers/events.js"],"names":["_","CREATE_EVENT","READ_EVENTS","DELETE_EVENT","UPDATE_EVENT","READ_EVENT","events","action","type","data","response","id","mapKeys"],"mappings":";;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SACEC,YADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,UALF,QAMO,YANP,C,CAQA;;AAEA,gBAAc,CAACC,MAAM,GAAG,EAAV,EAAcC,MAAd,KAAyB;AACrC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKP,YAAL;AACA,SAAKI,UAAL;AACA,SAAKD,YAAL;AACE,YAAMK,IAAI,GAAGF,MAAM,CAACG,QAAP,CAAgBD,IAA7B;AACA,+BAAYH,MAAZ;AAAmB,SAACG,IAAI,CAACE,EAAN,GAAWF;AAA9B;;AACF,SAAKP,WAAL;AACE;AACA;AACA,aAAOF,CAAC,CAACY,OAAF,CAAUL,MAAM,CAACG,QAAP,CAAgBD,IAA1B,EAAgC,IAAhC,CAAP;AACF;AACA;;AACA,SAAKN,YAAL;AACE,aAAOG,MAAM,CAACC,MAAM,CAACI,EAAR,CAAb;AACA,+BAAYL,MAAZ;;AACF;AACE,aAAOA,MAAP;AAhBJ;AAkBD,CAnBD","sourcesContent":["import _ from 'lodash'\nimport {\n  CREATE_EVENT,\n  READ_EVENTS,\n  DELETE_EVENT,\n  UPDATE_EVENT,\n  READ_EVENT\n} from '../actions'\n\n// const initialState = { value: 0 }\n\nexport default(events = {}, action) => {\n  switch(action.type){\n    case CREATE_EVENT:\n    case READ_EVENT:\n    case UPDATE_EVENT:\n      const data = action.response.data\n      return { ...events,[data.id]: data }\n    case READ_EVENTS:\n      // console.log(action.response.data)\n      // console.log(_.mapKeys(action.response.data, 'id'))\n      return _.mapKeys(action.response.data, 'id')\n    // case DECREMENT:\n    //   return { value: state.value - 1 }\n    case DELETE_EVENT:\n      delete events[action.id]\n      return { ...events }\n    default:\n      return events\n  }\n}"]},"metadata":{},"sourceType":"module"}