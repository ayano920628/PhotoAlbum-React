{"ast":null,"code":"var _jsxFileName = \"/Users/ayanoomori/udemy-react-redux-crud-application/src/components/events_show.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { getEvent, deleteEvent, putEvent } from '../actions';\nimport { Link } from 'react-router-dom';\n\nclass EventsShow extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    if (id) this.props.getEvent();\n  }\n\n  renderField(field) {\n    const input = field.input,\n          label = field.label,\n          type = field.type,\n          _field$meta = field.meta,\n          touched = _field$meta.touched,\n          error = _field$meta.error;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, input, {\n      placeholder: label,\n      type: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })), touched && error && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, error));\n  }\n\n  async onDeleteClick() {\n    const id = this.props.match.params.id;\n    console.log(id);\n    await this.props.deleteEvent(id);\n    this.props.history.push('/');\n  }\n\n  async onSubmit(values) {\n    // await this.props.postEvent(values)\n    this.props.history.push('/');\n  }\n\n  render() {\n    const _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          submitting = _this$props.submitting;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Title\",\n      name: \"title\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Body\",\n      name: \"body\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      disabled: pristine || submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Link, {\n      to: \"/\",\n      onClick: this.onDeleteClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const event = state.events[ownProps.match.params.id];\n  return {\n    initialValues: event,\n    event\n  };\n};\n\nconst mapDispatchToProps = {\n  deleteEvent\n};\n\nconst validate = values => {\n  const errors = {};\n  if (!values.title) errors.title = 'Enter a title, please.';\n  if (!values.body) errors.body = 'Enter a body, please.';\n  return errors;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  validate,\n  form: 'eventShowForm',\n  enableReinitialize: true\n})(EventsShow));","map":{"version":3,"sources":["/Users/ayanoomori/udemy-react-redux-crud-application/src/components/events_show.js"],"names":["React","Component","connect","Field","reduxForm","getEvent","deleteEvent","putEvent","Link","EventsShow","constructor","props","onSubmit","bind","onDeleteClick","componentDidMount","id","match","params","renderField","field","input","label","type","meta","touched","error","console","log","history","push","values","render","handleSubmit","pristine","submitting","mapStateToProps","state","ownProps","event","events","initialValues","mapDispatchToProps","validate","errors","title","body","form","enableReinitialize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form'\nimport { getEvent, deleteEvent, putEvent } from '../actions';\nimport { Link } from 'react-router-dom'\n\nclass EventsShow extends Component {\n  constructor(props){\n    super(props)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onDeleteClick = this.onDeleteClick.bind(this)\n  }\n\n  componentDidMount(){\n    const { id } = this.props.match.params\n    if (id) this.props.getEvent()    \n  }\n\n  renderField(field){\n    const {input, label, type, meta: {touched, error}} = field\n    return (\n    <div>\n      <input {...input} placeholder={label} type={type} />\n      {touched && error && <span>{error}</span>}\n    </div>\n    )\n  }\n  async onDeleteClick(){\n    const {id} = this.props.match.params\n    console.log(id);\n    await this.props.deleteEvent(id)\n    this.props.history.push('/')\n  }\n  async onSubmit(values){\n    // await this.props.postEvent(values)\n    this.props.history.push('/')\n  }\n  render() {\n    const { handleSubmit, pristine, submitting } = this.props\n    return (\n      <form onSubmit={handleSubmit(this.onSubmit)}>\n        <div><Field label='Title' name='title' type='text' component={this.renderField} /></div>\n        <div><Field label='Body' name='body' type='text' component={this.renderField} /></div>\n        <div>\n          <input type='submit' value='Submit' disabled={pristine || submitting} />\n          <Link to='/'>Cancel</Link>\n          <Link to='/' onClick={this.onDeleteClick}>Delete</Link>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const event = state.events[ownProps.match.params.id]\n  return {initialValues: event, event}\n}\n\nconst mapDispatchToProps = ({ deleteEvent })\n\nconst validate = values => {\n  const errors = {}\n  if (!values.title) errors.title = 'Enter a title, please.'\n  if (!values.body) errors.body = 'Enter a body, please.'\n  return errors\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  reduxForm({ validate, form:'eventShowForm', enableReinitialize: true})(EventsShow)\n)\n"]},"metadata":{},"sourceType":"module"}