{"ast":null,"code":"var _jsxFileName = \"/Users/ayanoomori/udemy-react-redux-crud-application/src/components/events_index.js\";\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import { directive } from '@babel/types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { readEvents } from '../actions'; // const App = () => (<Counter></Counter>)\n\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\n\nclass EventsIndex extends Component {\n  // constructor(props){\n  //   super(props);\n  // this.state = {count: 0}\n  // }\n  // handlePlusButton = () => {\n  //   this.setState({ count: this.state.count + 1 })\n  // }\n  // handleMinusButton = () => {\n  //   this.setState({ count: this.state.count - 1 })\n  // }\n  componentDidMount() {\n    this.props.readEvents();\n  }\n\n  renderEvents() {\n    return _.map(this.props.events, event => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, event.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, event.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, event.body)));\n  }\n\n  render() {\n    // const props = this.props\n    return (// <React.Fragment>\n      React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Body\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.renderEvents())) //   <Link to='/events/new'>New Event</Link>\n      // </React.Fragment>\n\n    );\n  }\n\n} // const App = () => {\n//   const profiles = [\n//     { name: 'Taro', age: 10 },\n//     { name: 'Hana', age: 15 },\n//     { name: 'Yuki', age: 20 },\n//   ]\n//   return (\n//     <React.Fragment>\n//       {/* <label htmlFor=\"bar\">bar</label>\n//       <input type=\"text\" onChange={() => {console.log(\"hello\")}} /> */}\n//       {\n//         profiles.map((profile, index) => {\n//           return <User name={profile.name} age={profile.age} key={index} />\n//         })\n//       }\n//     </React.Fragment>\n//   );\n// }\n// const User = (props) => {\n//   return (\n//     <div>Hi, I am {props.name}, and {props.age} years old.</div>\n//   );\n// }\n// User.defaultProps = {\n//   age: 1\n// }\n// User.propTypes = {\n//   name: PropTypes.string,\n//   age : PropTypes.number.isRequired\n// }\n\n\nconst mapStateToProps = state => ({\n  events: state.events\n}); // const mapDispatchToProps = dispatch => ({\n//   increment: () => dispatch(increment()),\n//   decrement: () => dispatch(decrement())\n// })\n\n\nconst mapDispatchToProps = {\n  readEvents\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsIndex); // export default App;","map":{"version":3,"sources":["/Users/ayanoomori/udemy-react-redux-crud-application/src/components/events_index.js"],"names":["React","Component","connect","readEvents","_","Link","EventsIndex","componentDidMount","props","renderEvents","map","events","event","id","title","body","render","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B,C,CACA;;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,WAAN,SAA2BL,SAA3B,CAAqC;AACnC;AACA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWL,UAAX;AACD;;AAEDM,EAAAA,YAAY,GAAE;AACZ,WAAOL,CAAC,CAACM,GAAF,CAAM,KAAKF,KAAL,CAAWG,MAAjB,EAAyBC,KAAK,IACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACC,EAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACE,KAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,KAAK,CAACG,IAAX,CAHF,CADK,CAAP;AAOD;;AACDC,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,YAAL,EADH,CARF,CAFJ,CAcE;AACA;;AAfF;AAiBD;;AA3CkC,C,CA6CrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMQ,eAAe,GAAGC,KAAK,KAAK;AAAEP,EAAAA,MAAM,EAAEO,KAAK,CAACP;AAAhB,CAAL,CAA7B,C,CACA;AACA;AACA;AACA;;;AACA,MAAMQ,kBAAkB,GAAI;AAAEhB,EAAAA;AAAF,CAA5B;AAEA,eAAeD,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,WAA7C,CAAf,C,CAEA","sourcesContent":["// import React from 'react';\n// import PropTypes from 'prop-types';\n// import { directive } from '@babel/types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { readEvents } from '../actions';\n// const App = () => (<Counter></Counter>)\nimport _ from 'lodash'\nimport { Link } from 'react-router-dom'\n\nclass EventsIndex  extends Component {\n  // constructor(props){\n  //   super(props);\n    // this.state = {count: 0}\n  // }\n  // handlePlusButton = () => {\n  //   this.setState({ count: this.state.count + 1 })\n  // }\n  // handleMinusButton = () => {\n  //   this.setState({ count: this.state.count - 1 })\n  // }\n  componentDidMount(){\n    this.props.readEvents();\n  }\n\n  renderEvents(){\n    return _.map(this.props.events, event =>(\n      <tr>\n        <td>{event.id}</td>\n        <td>{event.title}</td>\n        <td>{event.body}</td>\n      </tr>\n    ))\n  }\n  render() {\n    // const props = this.props\n    return (\n      // <React.Fragment>\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Title</th>\n              <th>Body</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderEvents()}\n          </tbody>\n        </table>\n      //   <Link to='/events/new'>New Event</Link>\n      // </React.Fragment>\n    );\n  }\n}\n// const App = () => {\n//   const profiles = [\n//     { name: 'Taro', age: 10 },\n//     { name: 'Hana', age: 15 },\n//     { name: 'Yuki', age: 20 },\n//   ]\n//   return (\n//     <React.Fragment>\n//       {/* <label htmlFor=\"bar\">bar</label>\n//       <input type=\"text\" onChange={() => {console.log(\"hello\")}} /> */}\n//       {\n//         profiles.map((profile, index) => {\n//           return <User name={profile.name} age={profile.age} key={index} />\n//         })\n//       }\n//     </React.Fragment>\n//   );\n// }\n\n// const User = (props) => {\n//   return (\n//     <div>Hi, I am {props.name}, and {props.age} years old.</div>\n//   );\n// }\n\n// User.defaultProps = {\n//   age: 1\n// }\n// User.propTypes = {\n//   name: PropTypes.string,\n//   age : PropTypes.number.isRequired\n// }\n\nconst mapStateToProps = state => ({ events: state.events })\n// const mapDispatchToProps = dispatch => ({\n//   increment: () => dispatch(increment()),\n//   decrement: () => dispatch(decrement())\n// })\nconst mapDispatchToProps = ({ readEvents })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsIndex)\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}