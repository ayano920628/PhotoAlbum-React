{"ast":null,"code":"var _jsxFileName = \"/Users/ayanoomori/udemy-react-redux-crud-application/src/components/events_index.js\";\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import { directive } from '@babel/types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { readEvents } from '../actions'; // const App = () => (<Counter></Counter>)\n\nclass EventsIndex extends Component {\n  // constructor(props){\n  //   super(props);\n  // this.state = {count: 0}\n  // }\n  // handlePlusButton = () => {\n  //   this.setState({ count: this.state.count + 1 })\n  // }\n  // handleMinusButton = () => {\n  //   this.setState({ count: this.state.count - 1 })\n  // }\n  componentDidMount() {\n    this.props.readEvents();\n  }\n\n  render() {\n    const props = this.props;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, console.log(props.events)));\n  }\n\n} // const App = () => {\n//   const profiles = [\n//     { name: 'Taro', age: 10 },\n//     { name: 'Hana', age: 15 },\n//     { name: 'Yuki', age: 20 },\n//   ]\n//   return (\n//     <React.Fragment>\n//       {/* <label htmlFor=\"bar\">bar</label>\n//       <input type=\"text\" onChange={() => {console.log(\"hello\")}} /> */}\n//       {\n//         profiles.map((profile, index) => {\n//           return <User name={profile.name} age={profile.age} key={index} />\n//         })\n//       }\n//     </React.Fragment>\n//   );\n// }\n// const User = (props) => {\n//   return (\n//     <div>Hi, I am {props.name}, and {props.age} years old.</div>\n//   );\n// }\n// User.defaultProps = {\n//   age: 1\n// }\n// User.propTypes = {\n//   name: PropTypes.string,\n//   age : PropTypes.number.isRequired\n// }\n\n\nconst mapStateToProps = state => ({\n  events: state.events\n}); // const mapDispatchToProps = dispatch => ({\n//   increment: () => dispatch(increment()),\n//   decrement: () => dispatch(decrement())\n// })\n\n\nconst mapDispatchToProps = {\n  readEvents\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsIndex); // export default App;","map":{"version":3,"sources":["/Users/ayanoomori/udemy-react-redux-crud-application/src/components/events_index.js"],"names":["React","Component","connect","readEvents","EventsIndex","componentDidMount","props","render","console","log","events","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B,C,CACA;;AAEA,MAAMC,WAAN,SAA2BH,SAA3B,CAAqC;AACnC;AACA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACAI,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWH,UAAX;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAMD,KAAK,GAAG,KAAKA,KAAnB;AACA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAME,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAlB,CAAN,CADF,CADF;AAQD;;AAzBkC,C,CA2BrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAAEF,EAAAA,MAAM,EAAEE,KAAK,CAACF;AAAhB,CAAL,CAA7B,C,CACA;AACA;AACA;AACA;;;AACA,MAAMG,kBAAkB,GAAI;AAAEV,EAAAA;AAAF,CAA5B;AAEA,eAAeD,OAAO,CAACS,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,WAA7C,CAAf,C,CAEA","sourcesContent":["// import React from 'react';\n// import PropTypes from 'prop-types';\n// import { directive } from '@babel/types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { readEvents } from '../actions';\n// const App = () => (<Counter></Counter>)\n\nclass EventsIndex  extends Component {\n  // constructor(props){\n  //   super(props);\n    // this.state = {count: 0}\n  // }\n  // handlePlusButton = () => {\n  //   this.setState({ count: this.state.count + 1 })\n  // }\n  // handleMinusButton = () => {\n  //   this.setState({ count: this.state.count - 1 })\n  // }\n  componentDidMount(){\n    this.props.readEvents();\n  }\n\n  render() {\n    const props = this.props\n    return (\n      <React.Fragment>\n        <div>{console.log(props.events)}</div>\n        {/* <div>value: { props.value }</div> */}\n        {/* <button onClick={props.increment}>+1</button>\n        <button onClick={props.decrement}>-1</button> */}\n      </React.Fragment>\n    );\n  }\n}\n// const App = () => {\n//   const profiles = [\n//     { name: 'Taro', age: 10 },\n//     { name: 'Hana', age: 15 },\n//     { name: 'Yuki', age: 20 },\n//   ]\n//   return (\n//     <React.Fragment>\n//       {/* <label htmlFor=\"bar\">bar</label>\n//       <input type=\"text\" onChange={() => {console.log(\"hello\")}} /> */}\n//       {\n//         profiles.map((profile, index) => {\n//           return <User name={profile.name} age={profile.age} key={index} />\n//         })\n//       }\n//     </React.Fragment>\n//   );\n// }\n\n// const User = (props) => {\n//   return (\n//     <div>Hi, I am {props.name}, and {props.age} years old.</div>\n//   );\n// }\n\n// User.defaultProps = {\n//   age: 1\n// }\n// User.propTypes = {\n//   name: PropTypes.string,\n//   age : PropTypes.number.isRequired\n// }\n\nconst mapStateToProps = state => ({ events: state.events })\n// const mapDispatchToProps = dispatch => ({\n//   increment: () => dispatch(increment()),\n//   decrement: () => dispatch(decrement())\n// })\nconst mapDispatchToProps = ({ readEvents })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsIndex)\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}